{"version":3,"file":"pie-chart.js","sourceRoot":"","sources":["src/pie-chart.ts"],"names":[],"mappings":"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","sourcesContent":["// D3 Imports\nimport { select } from \"d3-selection\";\nimport { scaleOrdinal } from \"d3-scale\";\nimport { pie, arc, Pie, Arc } from \"d3-shape\";\nimport { interpolate } from \"d3-interpolate\";\n\nimport { BaseChart } from \"./base-chart\";\nimport * as Configuration from \"./configuration\";\nimport { ChartConfig, PieChartOptions, ChartType, ChartData } from \"./configuration\";\nimport { Tools } from \"./tools\";\n\nexport interface PieDatum {\n\tlabel: string;\n\tvalue: number;\n\titems?: Array<PieDatum>;\n}\n\nexport interface PieDataSet extends Configuration.DataSet {\n\tdata: Array<PieDatum>;\n}\n\nexport interface PieData {\n\tlabels: Array<string>;\n\tdatasets: Array<PieDataSet>;\n}\n\nexport class PieChart extends BaseChart {\n\tpie: Pie<PieChart, any>;\n\tarc: Arc<PieChart, any>;\n\tpath: any;\n\n\toptions: PieChartOptions;\n\n\tconstructor(holder: Element, configs: ChartConfig<PieChartOptions>, type: ChartType.PIE | ChartType.DONUT = ChartType.PIE) {\n\t\tsuper(holder, configs);\n\n\t\tthis.options.type = type;\n\n\t\t// Assign colors to each slice using their label\n\t\tthis.colorScale = scaleOrdinal(this.options.colors);\n\t}\n\n\t// Sort data by value (descending)\n\t// Cap number of slices at a specific number, and group the remaining items into the label \"Other\"\n\tdataProcessor(dataObject: ChartData): PieData {\n\t\t// TODO - Support multiple datasets\n\t\tif (dataObject.datasets.length > 1) {\n\t\t\tconsole.warn(`Currently the Pie & Donut charts support a single dataset,\n\t\t\t\tyou appear to have more than that. Will only use your first provided dataset.`);\n\t\t}\n\n\t\t// Check for duplicate keys in the data\n\t\tconst duplicates = Tools.getDuplicateValues(dataObject.labels);\n\t\tif (duplicates.length > 0) {\n\t\t\tconsole.error(`${Tools.capitalizeFirstLetter(this.options.type)} Chart - You have duplicate keys`, duplicates);\n\t\t}\n\n\t\t// TODO - Support multiple datasets\n\t\t// let sortedData = data.datasets[0];\n\t\tconst dataList: Array<any> = dataObject.datasets[0].data.map((datum, i) => ({\n\t\t\tlabel: dataObject.labels[i],\n\t\t\tvalue: datum,\n\t\t\t// datasetLabel: data.datasets[0].label\n\t\t}));\n\n\t\t// Sort data by value\n\t\tlet sortedData = dataList.sort((a, b) => b.value - a.value);\n\n\t\t// Keep a certain number of slices, and add an \"Other\" slice for the rest\n\t\tconst { sliceLimit: stopAt } = Configuration.pie;\n\t\tconst rest = sortedData.slice(stopAt);\n\t\tconst restAccumulatedValue = rest.reduce((accum, item) => accum + item.value, 0);\n\n\t\tconst otherLabelIndex = sortedData.findIndex(dataPoint => dataPoint.label === \"Other\");\n\t\tif (otherLabelIndex !== -1) {\n\t\t\tsortedData.push(sortedData.splice(otherLabelIndex, 1)[0]);\n\t\t} else if (rest.length > 0) {\n\t\t\tsortedData = sortedData.slice(0, stopAt)\n\t\t\t\t.concat([{\n\t\t\t\t\tlabel: Configuration.pie.label.other,\n\t\t\t\t\tvalue: restAccumulatedValue,\n\t\t\t\t\titems: rest\n\t\t\t\t}]);\n\t\t}\n\n\t\treturn {\n\t\t\t// Sort labels based on the order made above\n\t\t\tlabels: sortedData.map((datum, i) => datum.label),\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\t// copy all the relevant properties\n\t\t\t\t\tbackgroundColors: dataObject.datasets[0].backgroundColors,\n\t\t\t\t\tchartType: dataObject.datasets[0].chartType,\n\t\t\t\t\tlabel: dataObject.datasets[0].label,\n\t\t\t\t\t// add our sorted data\n\t\t\t\t\tdata: sortedData\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t}\n\n\t// If there isn't a chart already drawn in the container\n\t// This function is called and will do that\n\tinitialDraw() {\n\t\tthis.setSVG();\n\n\t\t// Add legend\n\t\tthis.addOrUpdateLegend();\n\n\t\t// Draw slices & labels\n\t\tthis.draw();\n\n\t\t// Add event listeners to slices\n\t\tthis.addDataPointEventListener();\n\t}\n\n\tdraw() {\n\t\tconst dataList = this.displayData.datasets[0].data;\n\n\t\tconst chartSize = this.getChartSize(this.container);\n\t\tconst diameter = Math.min(chartSize.width, chartSize.height);\n\t\tconst radius: number = diameter / 2;\n\n\t\tselect(this.holder).select(\"svg\")\n\t\t\t.attr(\"width\", `${diameter}px`)\n\t\t\t.attr(\"height\", `${diameter}px`);\n\n\t\tthis.innerWrap\n\t\t\t.attr(\"transform\", `translate(${radius},${radius})`)\n\t\t\t.attr(\"width\", `${diameter}px`)\n\t\t\t.attr(\"height\", `${diameter}px`)\n\t\t\t.attr(\"preserveAspectRatio\", \"xMinYMin\");\n\n\t\t// Compute the correct inner & outer radius\n\t\tconst marginedRadius = this.computeRadius();\n\t\tthis.arc = arc()\n\t\t\t\t.innerRadius(this.options.type === \"donut\" ? (marginedRadius * (3 / 4)) : 2)\n\t\t\t\t.outerRadius(marginedRadius);\n\n\t\tthis.pie = pie()\n\t\t\t.value((d: any) => d.value)\n\t\t\t.sort(null)\n\t\t\t.padAngle(0.007);\n\n\t\t// Draw the slices\n\t\tthis.path = this.innerWrap.selectAll(\"path\")\n\t\t\t.data(this.pie(dataList))\n\t\t\t.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"d\", this.arc)\n\t\t\t.attr(\"fill\", d => this.getFillColor(this.displayData.datasets[0].label, d.data.label, d.data.value)) // Support multiple datasets\n\t\t\t.attr(\"stroke\", d => this.getStrokeColor(this.displayData.datasets[0].label, d.data.label, d.data.value))\n\t\t\t.attr(\"stroke-width\", Configuration.pie.default.strokeWidth)\n\t\t\t.attr(\"stroke-opacity\", d => this.options.accessibility ? 1 : 0)\n\t\t\t.each(function(d) { this._current = d; });\n\n\t\t// Draw the slice labels\n\t\tconst self = this;\n\t\tthis.innerWrap\n\t\t\t.selectAll(\"text.chart-label\")\n\t\t\t.data(this.pie(dataList), (d: any) => d.data.label)\n\t\t\t.enter()\n\t\t\t.append(\"text\")\n\t\t\t.classed(\"chart-label\", true)\n\t\t\t.attr(\"dy\", Configuration.pie.label.dy)\n\t\t\t.style(\"text-anchor\", \"middle\")\n\t\t\t.text(d => Tools.convertValueToPercentage(d.data.value, dataList))\n\t\t\t.attr(\"transform\", function (d) { return self.deriveTransformString(this, d, radius); });\n\n\t\t// Hide overlay\n\t\tthis.chartOverlay.hide();\n\t}\n\n\t// Interpolated transitions for older data points to reflect the new data changes\n\tinterpolateValues(newData: any) {\n\t\tconst dataList = newData.datasets[0].data;\n\n\t\t// Apply the new data to the slices, and interpolate them\n\t\tconst self = this;\n\t\tconst path = this.innerWrap.selectAll(\"path\").data(this.pie(dataList));\n\n\t\t// Update slices\n\t\tpath\n\t\t\t.transition()\n\t\t\t.duration(0)\n\t\t\t.attr(\"stroke\", d => this.getStrokeColor(this.displayData.datasets[0].label, d.data.label, d.data.value))\n\t\t\t.attr(\"stroke-width\", Configuration.pie.default.strokeWidth)\n\t\t\t.attr(\"stroke-opacity\", d => this.options.accessibility ? 1 : 0)\n\t\t\t.transition()\n\t\t\t.style(\"opacity\", 1)\n\t\t\t.duration(Configuration.transitions.default.duration)\n\t\t\t.attr(\"fill\", d => this.getFillColor(this.displayData.datasets[0].label, d.data.label, d.data.value))\n\t\t\t.attrTween(\"d\", function (a) {\n\t\t\t\treturn arcTween.bind(this)(a, self.arc);\n\t\t\t});\n\n\t\tpath.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"d\", this.arc)\n\t\t\t.transition()\n\t\t\t.duration(0)\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.attr(\"stroke\", d => this.getStrokeColor(this.displayData.datasets[0].label, d.data.label, d.data.value))\n\t\t\t.attr(\"stroke-width\", Configuration.pie.default.strokeWidth)\n\t\t\t.attr(\"stroke-opacity\", d => this.options.accessibility ? 1 : 0)\n\t\t\t.transition()\n\t\t\t.duration(Configuration.transitions.default.duration)\n\t\t\t.attr(\"fill\", d => this.getFillColor(this.displayData.datasets[0].label, d.data.label, d.data.value))\n\t\t\t.style(\"opacity\", 1)\n\t\t\t.attrTween(\"d\", function (a) {\n\t\t\t\treturn arcTween.bind(this)(a, self.arc);\n\t\t\t});\n\n\t\tpath\n\t\t\t.exit()\n\t\t\t.attr(\"d\", this.arc)\n\t\t\t.transition()\n\t\t\t.duration(Configuration.transitions.default.duration)\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.remove();\n\n\t\t// Fade out all text labels\n\t\tthis.innerWrap.selectAll(\"text.chart-label\")\n\t\t\t.transition()\n\t\t\t.duration(Configuration.transitions.default.duration / 2)\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.on(\"end\", function(d) {\n\t\t\t\tselect(this)\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(Configuration.transitions.default.duration / 2)\n\t\t\t\t\t.style(\"opacity\", 1);\n\t\t\t});\n\n\t\t// Move text labels to their new location, and fade them in again\n\t\tconst radius = this.computeRadius();\n\t\tsetTimeout(() => {\n\t\t\tconst text = this.innerWrap.selectAll(\"text.chart-label\")\n\t\t\t\t.data(this.pie(dataList), d => d.label );\n\n\t\t\ttext\n\t\t\t\t.enter()\n\t\t\t\t.append(\"text\")\n\t\t\t\t.classed(\"chart-label\", true)\n\t\t\t\t.attr(\"dy\", Configuration.pie.label.dy)\n\t\t\t\t.style(\"text-anchor\", \"middle\")\n\t\t\t\t.text(d => Tools.convertValueToPercentage(d.data.value, dataList))\n\t\t\t\t.attr(\"transform\", function (d) { return self.deriveTransformString(this, d, radius); })\n\t\t\t\t.style(\"opacity\", 0)\n\t\t\t\t.transition()\n\t\t\t\t.duration(Configuration.transitions.default.duration / 2)\n\t\t\t\t.style(\"opacity\", 1);\n\n\t\t\ttext\n\t\t\t\t.style(\"text-anchor\", \"middle\")\n\t\t\t\t.text(d => Tools.convertValueToPercentage(d.data.value, dataList))\n\t\t\t\t.attr(\"transform\", function (d) { return self.deriveTransformString(this, d, radius); })\n\t\t\t\t.transition()\n\t\t\t\t.duration(Configuration.transitions.default.duration / 2)\n\t\t\t\t.style(\"opacity\", 1);\n\n\t\t\ttext\n\t\t\t\t.exit()\n\t\t\t\t.remove();\n\t\t}, Configuration.transitions.default.duration / 2);\n\n\t\t// Add slice hover actions, and clear any slice borders present\n\t\tthis.addDataPointEventListener();\n\t\tthis.reduceOpacity();\n\n\t\t// Hide the overlay\n\t\tthis.chartOverlay.hide();\n\t}\n\n\t// TODO - Possible inherits from base-chart\n\treduceOpacity(exception?: any) {\n\t\tif (exception) {\n\t\t\t// this.innerWrap.selectAll(\"path\").attr(\"fill-opacity\", Configuration.charts.reduceOpacity.opacity);\n\n\t\t\t// Fade everything out except for this element\n\t\t\tselect(exception).attr(\"fill-opacity\", false);\n\t\t\tselect(exception).attr(\"stroke-opacity\", Configuration.charts.reduceOpacity.opacity);\n\t\t\tselect(exception).attr(\"fill\", (d: any) => this.getFillColor(this.displayData.datasets[0].label, d.data.label, d.data.value));\n\t\t}\n\t}\n\n\tgetTooltipHTML = d => this.generateTooltipHTML(d.data.label, d.value.toLocaleString());\n\n\t// TODO - Refactor\n\taddDataPointEventListener() {\n\t\tconst self = this;\n\t\tconst { accessibility } = this.options;\n\n\t\tthis.innerWrap.selectAll(\"path\")\n\t\t\t.on(\"click\", d => self.dispatchEvent(\"pie-slice-onClick\", d))\n\t\t\t.on(\"mouseover\", function(d) {\n\t\t\t\tconst sliceElement = select(this);\n\t\t\t\tTools.moveToFront(sliceElement);\n\n\t\t\t\tsliceElement.attr(\"stroke-width\", Configuration.pie.mouseover.strokeWidth)\n\t\t\t\t\t.attr(\"stroke-opacity\", Configuration.pie.mouseover.strokeOpacity)\n\t\t\t\t\t.attr(\"stroke\", self.getStrokeColor(self.displayData.datasets[0].label, d.data.label, d.data.value));\n\n\t\t\t\tself.showTooltip(d);\n\t\t\t\tself.reduceOpacity(this);\n\t\t\t})\n\t\t\t.on(\"mousemove\", d => self.tooltip.positionTooltip())\n\t\t\t.on(\"mouseout\", function(d) {\n\t\t\t\tselect(this)\n\t\t\t\t\t.attr(\"stroke-width\", accessibility ? Configuration.pie.default.strokeWidth : Configuration.pie.mouseout.strokeWidth)\n\t\t\t\t\t.attr(\"stroke\", accessibility ? self.getStrokeColor(self.displayData.datasets[0].label, d.data.label, d.data.value) : \"none\")\n\t\t\t\t\t.attr(\"stroke-opacity\", Configuration.pie.mouseout.strokeOpacity);\n\n\t\t\t\tself.hideTooltip();\n\t\t\t});\n\t}\n\n\tupdate(newData?: any) {\n\t\tconst oldData = Tools.clone(this.displayData);\n\t\tconst activeLegendItems = this.getActiveLegendItems();\n\n\t\t// TODO - Support multiple datasets\n\t\tconst newDisplayData = Object.assign({}, oldData);\n\t\tnewDisplayData.datasets[0].data = oldData.datasets[0].data.filter(dataPoint => activeLegendItems.indexOf(dataPoint.label) !== -1);\n\n\t\tnewDisplayData.labels = newDisplayData.datasets[0].data.map(datum => datum.label);\n\n\t\tthis.interpolateValues(newDisplayData);\n\t}\n\n\tresizeChart() {\n\t\tconst chartSize: any = this.getChartSize(this.container);\n\t\tconst dimensionToUseForScale = Math.min(chartSize.width, chartSize.height);\n\t\tconst radius: number = this.computeRadius();\n\n\t\t// Resize the SVG\n\t\tselect(this.holder).select(\"svg\")\n\t\t\t\t.attr(\"width\", `${dimensionToUseForScale}px`)\n\t\t\t\t.attr(\"height\", `${dimensionToUseForScale}px`);\n\t\tthis.innerWrap\n\t\t\t.style(\"transform\", `translate(${radius}px,${radius}px)`);\n\n\t\t// Resize the arc\n\t\tthis.arc = arc()\n\t\t\t.innerRadius(this.options.type === \"donut\" ? (radius * (3 / 4)) : 2)\n\t\t\t.outerRadius(radius);\n\n\t\tthis.innerWrap.selectAll(\"path\")\n\t\t\t.attr(\"d\", this.arc);\n\n\t\tconst self = this;\n\t\tthis.innerWrap\n\t\t\t.selectAll(\"text.chart-label\")\n\t\t\t.attr(\"transform\", function (d) { return self.deriveTransformString(this, d, radius); });\n\n\t\t// Reposition the legend\n\t\tthis.positionLegend();\n\t}\n\n\t// Helper functions\n\tprivate computeRadius() {\n\t\tconst chartSize: any = this.getChartSize(this.container);\n\t\tconst radius: number = Math.min(chartSize.width, chartSize.height) / 2;\n\n\t\treturn radius;\n\t}\n\n\t/**\n\t * Return the css transform string to be used for the slice\n\t *\n\t * @private\n\t * @param {any} d - d3 data item for slice\n\t * @param {any} radius - computed radius of the chart\n\t * @returns final transform string to be applied to the <text> element\n\t * @memberof PieChart\n\t */\n\tprivate deriveTransformString(element, d, radius) {\n\t\tconst textLength = element.getComputedTextLength();\n\t\tconst textOffsetX = textLength / 2;\n\t\tconst textOffsetY = parseFloat(getComputedStyle(element).fontSize) / 2;\n\n\t\tconst marginedRadius = radius + Configuration.pie.label.margin;\n\n\t\tconst theta = ((d.endAngle - d.startAngle) / 2) + d.startAngle;\n\t\tconst xPosition = (textOffsetX + marginedRadius) * Math.sin(theta);\n\t\tconst yPosition = (textOffsetY + marginedRadius) * -Math.cos(theta);\n\n\t\treturn `translate(${xPosition}, ${yPosition})`;\n\t}\n}\n\n// d3 Tween functions\nfunction arcTween(a, arcFunc) {\n\tconst i = interpolate(this._current, a);\n\n\treturn t => {\n\t\tthis._current = i(t);\n\n\t\treturn arcFunc(this._current);\n\t};\n}\n"]}