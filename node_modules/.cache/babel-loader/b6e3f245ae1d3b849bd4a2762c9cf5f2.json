{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\src\\\\content\\\\TestProcess\\\\TestProcess.js\";\nimport React, { Component } from 'react';\nimport { storiesOf, action } from '@storybook/react';\nimport { ScatterPlot } from 'carbon-addons-data-viz-react';\n\nvar TestProcess =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestProcess, _Component);\n\n  function TestProcess() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TestProcess);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TestProcess)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: _this.createData(12).sort(function (a, b) {\n        return a[a.length - 1] - b[b.length - 1];\n      })\n    };\n    return _this;\n  }\n\n  _createClass(TestProcess, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var i = 0;\n      this.interval = setInterval(function () {\n        _this2.updateData(i);\n\n        i++;\n      }, 5000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearInterval(this.interval);\n    }\n  }, {\n    key: \"createData\",\n    value: function createData(num) {\n      var data = [];\n\n      for (var i = 0; i < num; i++) {\n        var tempArr = [];\n        var d = new Date();\n        var randomNum = Math.floor(Math.random() * 1000 + 1);\n        d = d.setDate(d.getDate() - i * 30);\n        tempArr.push(randomNum, d);\n        data.push(tempArr);\n      }\n\n      return data;\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData(i) {\n      var data = this.createData(20).sort(function (a, b) {\n        return a[1] - b[1];\n      });\n      this.setState({\n        data: data,\n        xAxisLabel: \"\".concat(i),\n        yAxisLabel: \"\".concat(i)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = {\n        data: this.state.data,\n        margin: {\n          top: 30,\n          right: 20,\n          bottom: 70,\n          left: 65\n        },\n        height: 300,\n        width: 800,\n        labelOffset: 55,\n        axisOffset: 16,\n        xAxisLabel: 'MONTH',\n        yAxisLabel: 'USAGE ($)',\n        timeFormat: '%b'\n      };\n      return storiesOf('ScatterPlot', module).add('Default', \"\\n      Line Graph.\\n    \", function () {\n        return React.createElement(ScatterPlot, Object.assign({\n          onHover: action('Hover')\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return TestProcess;\n}(Component);\n\nexport default TestProcess;","map":{"version":3,"sources":["C:\\Users\\AnxhelaCoba\\Downloads\\carbon-charts-react\\src\\content\\TestProcess\\TestProcess.js"],"names":["React","Component","storiesOf","action","ScatterPlot","TestProcess","state","data","createData","sort","a","b","length","i","interval","setInterval","updateData","window","clearInterval","num","tempArr","d","Date","randomNum","Math","floor","random","setDate","getDate","push","setState","xAxisLabel","yAxisLabel","props","margin","top","right","bottom","left","height","width","labelOffset","axisOffset","timeFormat","module","add"],"mappings":"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","sourcesContent":["import React, {Component}from 'react';\r\nimport { storiesOf, action } from '@storybook/react';\r\nimport {ScatterPlot} from 'carbon-addons-data-viz-react';\r\n\r\n\r\nclass TestProcess extends Component {\r\n  state = {\r\n    data: this.createData(12).sort(function(a, b) {\r\n      return a[a.length - 1] - b[b.length - 1];\r\n    }),\r\n  };\r\n\r\n  componentDidMount() {\r\n    let i = 0;\r\n    this.interval = setInterval(() => {\r\n      this.updateData(i);\r\n      i++;\r\n    }, 5000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.interval);\r\n  }\r\n\r\ncreateData(num) {\r\n  let data = [];\r\n  for (let i = 0; i < num; i++) {\r\n    let tempArr = [];\r\n    let d = new Date();\r\n    let randomNum = Math.floor(Math.random() * 1000 + 1);\r\n    d = d.setDate(d.getDate() - i * 30);\r\n    tempArr.push(randomNum, d);\r\n    data.push(tempArr);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n\r\nupdateData(i){\r\nlet data = this.createData(20).sort(function(a, b) {\r\n  return a[1] - b[1];\r\n});\r\n\r\nthis.setState({\r\n  data,\r\n  xAxisLabel: `${i}`,\r\n  yAxisLabel:`${i}`,\r\n});\r\n}\r\n\r\nrender(){\r\nconst props = {\r\n  data: this.state.data,\r\n  margin: {\r\n    top: 30,\r\n    right: 20,\r\n    bottom: 70,\r\n    left: 65,\r\n  },\r\n  height: 300,\r\n  width: 800,\r\n  labelOffset: 55,\r\n  axisOffset: 16,\r\n  xAxisLabel: 'MONTH',\r\n  yAxisLabel: 'USAGE ($)',\r\n  timeFormat: '%b',\r\n};\r\nreturn(\r\nstoriesOf('ScatterPlot', module).add(\r\n  'Default',\r\n  `\r\n      Line Graph.\r\n    `,\r\n  () => <ScatterPlot onHover={action('Hover')} {...props} />)\r\n);\r\n}\r\n}\r\n\r\n\r\nexport default TestProcess"]},"metadata":{},"sourceType":"module"}