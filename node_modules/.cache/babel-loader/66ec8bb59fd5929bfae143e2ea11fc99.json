{"ast":null,"code":"var _defaultTranslations;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React from 'react';\nimport { settings } from 'carbon-components';\nimport PropTypes from 'prop-types';\nvar prefix = settings.prefix;\nexport var translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['close.menu'], 'Close menu'), _defineProperty(_defaultTranslations, translationIds['open.menu'], 'Open menu'), _defaultTranslations);\n/**\n * `ListBoxField` is responsible for creating the containing node for valid\n * elements inside of a field. It also provides a11y-related attributes like\n * `role` to make sure a user can focus the given field.\n */\n\nvar ListBoxField = function ListBoxField(_ref) {\n  var children = _ref.children,\n      id = _ref.id,\n      disabled = _ref.disabled,\n      tabIndex = _ref.tabIndex,\n      t = _ref.translateWithId,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"id\", \"disabled\", \"tabIndex\", \"translateWithId\"]);\n\n  return React.createElement(\"div\", _extends({\n    role: rest['aria-expanded'] ? 'combobox' : rest.role || 'combobox',\n    \"aria-owns\": rest['aria-expanded'] && \"\".concat(id, \"__menu\") || null,\n    \"aria-controls\": rest['aria-expanded'] && \"\".concat(id, \"__menu\") || null,\n    className: \"\".concat(prefix, \"--list-box__field\"),\n    tabIndex: !disabled && tabIndex || -1\n  }, rest, {\n    \"aria-label\": rest['aria-expanded'] ? t('close.menu') : t('open.menu')\n  }), children);\n};\n\nListBoxField.propTypes = {\n  /**\n   * Provide the contents of your ListBoxField\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a custom `id`\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify if the parent <ListBox> is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Optional prop to specify the tabIndex of the <ListBox> trigger button\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nListBoxField.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nexport default ListBoxField;","map":null,"metadata":{},"sourceType":"module"}