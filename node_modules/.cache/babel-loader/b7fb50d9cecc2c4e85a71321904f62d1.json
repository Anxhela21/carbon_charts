{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.assign\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = exports.Textarea = exports.Select = exports.Input = void 0;\n\nvar _theming = require(\"@storybook/theming\");\n\nvar _recompose = require(\"recompose\");\n\nvar _reactTextareaAutosize = _interopRequireDefault(require(\"react-textarea-autosize\"));\n\nvar _Button = require(\"../../Button/Button\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar styleResets = {\n  // resets\n  appearance: 'none',\n  border: '0',\n  boxSizing: 'inherit',\n  display: ' block',\n  margin: ' 0',\n  background: 'transparent',\n  padding: 0,\n  fontSize: 'inherit',\n  position: 'relative'\n};\n\nvar styles = function styles(_ref) {\n  var theme = _ref.theme;\n  return Object.assign({}, styleResets, {\n    transition: 'all 200ms ease-out',\n    color: theme.input.color || 'inherit',\n    background: theme.input.background,\n    boxShadow: \"\".concat(theme.input.border, \" 0 0 0 1px inset\"),\n    borderRadius: theme.input.borderRadius,\n    fontSize: theme.typography.size.s2 - 1,\n    lineHeight: '20px',\n    padding: '.42em 1em',\n    // 32\n    '&:focus': {\n      boxShadow: \"\".concat(theme.color.secondary, \" 0 0 0 1px inset\")\n    },\n    '&[disabled]': {\n      cursor: 'not-allowed',\n      opacity: 0.5\n    },\n    '&:-webkit-autofill': {\n      WebkitBoxShadow: \"0 0 0 3em \".concat(theme.color.lightest, \" inset\")\n    },\n    '::placeholder': {\n      color: theme.color.mediumdark\n    }\n  });\n};\n\nvar sizes = function sizes(_ref2) {\n  var size = _ref2.size;\n\n  switch (size) {\n    case '100%':\n      {\n        return {\n          width: '100%'\n        };\n      }\n\n    case 'flex':\n      {\n        return {\n          flex: 1\n        };\n      }\n\n    case 'auto':\n    default:\n      {\n        return {\n          display: 'inline'\n        };\n      }\n  }\n};\n\nvar alignment = function alignment(_ref3) {\n  var align = _ref3.align;\n\n  switch (align) {\n    case 'end':\n      {\n        return {\n          textAlign: 'right'\n        };\n      }\n\n    case 'center':\n      {\n        return {\n          textAlign: 'center'\n        };\n      }\n\n    case 'start':\n    default:\n      {\n        return {\n          textAlign: 'left'\n        };\n      }\n  }\n};\n\nvar validation = function validation(_ref4) {\n  var valid = _ref4.valid,\n      theme = _ref4.theme;\n\n  switch (valid) {\n    case 'valid':\n      {\n        return {\n          boxShadow: \"\".concat(theme.color.positive, \" 0 0 0 1px inset !important\")\n        };\n      }\n\n    case 'error':\n      {\n        return {\n          boxShadow: \"\".concat(theme.color.negative, \" 0 0 0 1px inset !important\")\n        };\n      }\n\n    case 'warn':\n      {\n        return {\n          boxShadow: \"\".concat(theme.color.warning, \" 0 0 0 1px inset\")\n        };\n      }\n\n    case undefined:\n    case null:\n    default:\n      {\n        return {};\n      }\n  }\n};\n\nvar Input = _theming.styled.input(styles, sizes, alignment, validation, {\n  minHeight: 32\n});\n\nexports.Input = Input;\nInput.styles = Object.assign({}, styleResets, styles);\nInput.sizes = sizes;\nInput.alignment = alignment;\nInput.displayName = 'Input';\n\nvar Select = _theming.styled.select(styles, sizes, validation, {\n  height: 32,\n  userSelect: 'none',\n  paddingRight: 20,\n  appearance: 'menulist'\n});\n\nexports.Select = Select;\nSelect.displayName = 'Select';\nvar Textarea = (0, _theming.styled)(_reactTextareaAutosize[\"default\"])(styles, sizes, alignment, validation, {\n  overflow: 'visible'\n});\nexports.Textarea = Textarea;\nTextarea.displayName = 'Textarea';\nvar Button = (0, _recompose.withProps)({\n  tertiary: true,\n  small: true,\n  inForm: true\n})((0, _theming.styled)(_Button.Button)(sizes, validation, {\n  // Custom styling for color widget nested in buttons\n  userSelect: 'none',\n  overflow: 'visible',\n  zIndex: 2,\n  // overrides the default hover from Button\n  '&:hover': {\n    transform: 'none'\n  }\n}));\nexports.Button = Button;\nButton.displayName = 'Button';","map":null,"metadata":{},"sourceType":"script"}