{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\src\\\\content\\\\ProcessQuad\\\\ProcessQuad.js\";\nimport React, { Component } from 'react';\nimport { storiesOf, action } from '@storybook/react';\nimport { LineGraph } from 'carbon-addons-data-viz-react';\nimport { withInfo } from '@storybook/addon-info';\n\nvar ProcessQuad =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProcessQuad, _Component);\n\n  function ProcessQuad() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProcessQuad);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProcessQuad)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: _this.createData(12).sort(function (a, b) {\n        return a[a.length - 1] - b[b.length - 1];\n      })\n    };\n    return _this;\n  }\n\n  _createClass(ProcessQuad, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var i = 0;\n      this.interval = setInterval(function () {\n        _this2.updateData(i);\n\n        i++;\n      }, 5000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearInterval(this.interval);\n    } //Here instead of producing randomly generated numbers, we will have three \n    //(or more numbers corresponding to specific features from the bluesight)\n\n  }, {\n    key: \"createData\",\n    value: function createData(num) {\n      var data = [];\n\n      for (var i = 0; i < num; i++) {\n        var tempArr = [];\n        var d = new Date();\n        var randomNum = Math.floor(Math.random() * 1000 + 1);\n        var randomNumTwo = Math.floor(Math.random() * 1000 + 1);\n        var randomNumThree = Math.floor(Math.random() * 1000 + 1);\n        d = d.getTime() - i * 3000;\n        tempArr.push(randomNum, randomNumTwo, randomNumThree, d);\n        data.push(tempArr);\n      }\n\n      return data;\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData(i) {\n      var data = this.createData(12).sort(function (a, b) {\n        return a[a.length - 1] - b[b.length - 1];\n      });\n      this.setState({\n        data: data,\n        xAxisLabel: \"\".concat(i),\n        yAxisLabel: \"\".concat(i)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = {\n        margin: {\n          top: 30,\n          right: 20,\n          bottom: 75,\n          left: 65\n        },\n        height: 500,\n        width: 1000,\n        labelOffsetY: 55,\n        labelOffsetX: 65,\n        axisOffset: 16,\n        timeFormat: '%I:%M:%S',\n        yAxisLabel: this.state.yAxisLabel,\n        xAxisLabel: this.state.xAxisLabel,\n        data: this.state.data,\n        onHover: function onHover() {},\n        onMouseOut: function onMouseOut() {},\n        id: this.props.id,\n        containerId: this.props.containerId,\n        drawLine: this.props.drawLine,\n        animateAxes: this.props.animateAxes,\n        seriesLabels: ['Bluecard F1', 'Bluecard F2', 'Bluecard F3']\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(LineGraph, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ProcessQuad;\n}(Component);\n\nstoriesOf('LineGraph', module).add('Updating', \"\\n      Line Graph.\\n    \", function () {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(ProcessQuad, {\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(ProcessQuad, {\n    id: \"two\",\n    containerId: \"test-two\",\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }));\n}).add('Updating without drawing line', \"\\n      Line Graph without draw line animation.\\n    \", function () {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(ProcessQuad, {\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    drawLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(ProcessQuad, {\n    id: \"two\",\n    containerId: \"test-two\",\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    drawLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n}).add('Updating without animating axes', \"\\n      Line Graph without axes animation.\\n    \", function () {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(ProcessQuad, {\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    animateAxes: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(ProcessQuad, {\n    id: \"two\",\n    containerId: \"test-two\",\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    animateAxes: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }));\n}).add('Static', \" Static Example. \", function () {\n  return React.createElement(LineGraph, {\n    datasets: [[[43, 1507563000000], [27, 1507563900000], [33, 1507564800000]], [[48.633333333333, 1507563004000], [21, 1507563900140], [38, 1507564830000]]],\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  });\n}).add('Number values for X', \" Static Example. \", function () {\n  return React.createElement(LineGraph, {\n    datasets: [[[45, 12], [23, 14], [33, 18], [31, 20], [12, 21]], [[48.633333333333, 11], [21, 15], [38, 16], [21, 19], [31, 21]]],\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    seriesLabels: ['Series 1', 'Series 2', 'Series 3'],\n    showLegend: true,\n    isXTime: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  });\n}).add('Empty', \" Empty Example. \", function () {\n  return React.createElement(LineGraph, {\n    onHover: action('Hover'),\n    onMouseOut: action('Mouseout'),\n    onBlur: action('Blur'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  });\n});\nexport default ProcessQuad;","map":{"version":3,"sources":["C:\\Users\\AnxhelaCoba\\Downloads\\carbon-charts-react\\src\\content\\ProcessQuad\\ProcessQuad.js"],"names":["React","Component","storiesOf","action","LineGraph","withInfo","ProcessQuad","state","data","createData","sort","a","b","length","i","interval","setInterval","updateData","window","clearInterval","num","tempArr","d","Date","randomNum","Math","floor","random","randomNumTwo","randomNumThree","getTime","push","setState","xAxisLabel","yAxisLabel","props","margin","top","right","bottom","left","height","width","labelOffsetY","labelOffsetX","axisOffset","timeFormat","onHover","onMouseOut","id","containerId","drawLine","animateAxes","seriesLabels","module","add"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,kBAAlC;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,MAAKC,UAAL,CAAgB,EAAhB,EAAoBC,IAApB,CAAyB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC5C,eAAOD,CAAC,CAACA,CAAC,CAACE,MAAF,GAAW,CAAZ,CAAD,GAAkBD,CAAC,CAACA,CAAC,CAACC,MAAF,GAAW,CAAZ,CAA1B;AACD,OAFK;AADA,K;;;;;;wCAMY;AAAA;;AAClB,UAAIC,CAAC,GAAG,CAAR;AACA,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACC,UAAL,CAAgBH,CAAhB;;AACAA,QAAAA,CAAC;AACF,OAH0B,EAGxB,IAHwB,CAA3B;AAID;;;2CAEsB;AACrBI,MAAAA,MAAM,CAACC,aAAP,CAAqB,KAAKJ,QAA1B;AACD,K,CAED;AACA;;;;+BACWK,G,EAAK;AACd,UAAIZ,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,GAApB,EAAyBN,CAAC,EAA1B,EAA8B;AAC5B,YAAIO,OAAO,GAAG,EAAd;AACA,YAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,YAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAAhB,GAAuB,CAAlC,CAAhB;AACA,YAAIC,YAAY,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAAhB,GAAuB,CAAlC,CAAnB;AACA,YAAIE,cAAc,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAAhB,GAAuB,CAAlC,CAArB;AACAL,QAAAA,CAAC,GAAGA,CAAC,CAACQ,OAAF,KAAchB,CAAC,GAAG,IAAtB;AACAO,QAAAA,OAAO,CAACU,IAAR,CAAaP,SAAb,EAAwBI,YAAxB,EAAsCC,cAAtC,EAAsDP,CAAtD;AACAd,QAAAA,IAAI,CAACuB,IAAL,CAAUV,OAAV;AACD;;AAED,aAAOb,IAAP;AACD;;;+BAEUM,C,EAAG;AACZ,UAAIN,IAAI,GAAG,KAAKC,UAAL,CAAgB,EAAhB,EAAoBC,IAApB,CAAyB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACjD,eAAOD,CAAC,CAACA,CAAC,CAACE,MAAF,GAAW,CAAZ,CAAD,GAAkBD,CAAC,CAACA,CAAC,CAACC,MAAF,GAAW,CAAZ,CAA1B;AACD,OAFU,CAAX;AAIA,WAAKmB,QAAL,CAAc;AACZxB,QAAAA,IAAI,EAAJA,IADY;AAEZyB,QAAAA,UAAU,YAAKnB,CAAL,CAFE;AAGZoB,QAAAA,UAAU,YAAKpB,CAAL;AAHE,OAAd;AAKD;;;6BAEQ;AACP,UAAMqB,KAAK,GAAG;AACZC,QAAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EAAE,EADC;AAENC,UAAAA,KAAK,EAAE,EAFD;AAGNC,UAAAA,MAAM,EAAE,EAHF;AAINC,UAAAA,IAAI,EAAE;AAJA,SADI;AAOZC,QAAAA,MAAM,EAAE,GAPI;AAQZC,QAAAA,KAAK,EAAE,IARK;AASZC,QAAAA,YAAY,EAAE,EATF;AAUZC,QAAAA,YAAY,EAAE,EAVF;AAWZC,QAAAA,UAAU,EAAE,EAXA;AAYZC,QAAAA,UAAU,EAAE,UAZA;AAaZZ,QAAAA,UAAU,EAAE,KAAK3B,KAAL,CAAW2B,UAbX;AAcZD,QAAAA,UAAU,EAAE,KAAK1B,KAAL,CAAW0B,UAdX;AAeZzB,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAfL;AAgBZuC,QAAAA,OAAO,EAAE,mBAAM,CAAE,CAhBL;AAiBZC,QAAAA,UAAU,EAAE,sBAAM,CAAE,CAjBR;AAkBZC,QAAAA,EAAE,EAAE,KAAKd,KAAL,CAAWc,EAlBH;AAmBZC,QAAAA,WAAW,EAAE,KAAKf,KAAL,CAAWe,WAnBZ;AAoBZC,QAAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWgB,QApBT;AAqBZC,QAAAA,WAAW,EAAE,KAAKjB,KAAL,CAAWiB,WArBZ;AAsBZC,QAAAA,YAAY,EAAE,CAAC,aAAD,EAAgB,aAAhB,EAA+B,aAA/B;AAtBF,OAAd;AAyBA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,oBAAC,SAAD,oBAAelB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAL,CAAP;AACD;;;;EA5EuBlC,S;;AA+E1BC,SAAS,CAAC,WAAD,EAAcoD,MAAd,CAAT,CACGC,GADH,CAEI,UAFJ,+BAMI;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAEpD,MAAM,CAAC,OAAD,CADjB;AAEE,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CAFpB;AAGE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAEA,MAAM,CAAC,OAAD,CAHjB;AAIE,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CAJpB;AAKE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAAA,CANJ,EAuBGoD,GAvBH,CAwBI,+BAxBJ,2DA4BI;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAEpD,MAAM,CAAC,OAAD,CADjB;AAEE,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CAFpB;AAGE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CAHhB;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAEA,MAAM,CAAC,OAAD,CAHjB;AAIE,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CAJpB;AAKE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CALhB;AAME,IAAA,QAAQ,EAAE,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAAA,CA5BJ,EA+CGoD,GA/CH,CAgDI,iCAhDJ,sDAoDI;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAEpD,MAAM,CAAC,OAAD,CADjB;AAEE,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CAFpB;AAGE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CAHhB;AAIE,IAAA,WAAW,EAAE,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAEA,MAAM,CAAC,OAAD,CAHjB;AAIE,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CAJpB;AAKE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CALhB;AAME,IAAA,WAAW,EAAE,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAAA,CApDJ,EAuEGoD,GAvEH,CAuEO,QAvEP,uBAuEsC;AAAA,SAClC,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAE,CACR,CAAC,CAAC,EAAD,EAAK,aAAL,CAAD,EAAsB,CAAC,EAAD,EAAK,aAAL,CAAtB,EAA2C,CAAC,EAAD,EAAK,aAAL,CAA3C,CADQ,EAER,CACE,CAAC,eAAD,EAAkB,aAAlB,CADF,EAEE,CAAC,EAAD,EAAK,aAAL,CAFF,EAGE,CAAC,EAAD,EAAK,aAAL,CAHF,CAFQ,CADZ;AASE,IAAA,OAAO,EAAEpD,MAAM,CAAC,OAAD,CATjB;AAUE,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CAVpB;AAWE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkC;AAAA,CAvEtC,EAsFGoD,GAtFH,CAsFO,qBAtFP,uBAsFmD;AAAA,SAC/C,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAE,CACR,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAW,CAAC,EAAD,EAAK,EAAL,CAAX,EAAqB,CAAC,EAAD,EAAK,EAAL,CAArB,EAA+B,CAAC,EAAD,EAAK,EAAL,CAA/B,EAAyC,CAAC,EAAD,EAAK,EAAL,CAAzC,CADQ,EAER,CAAC,CAAC,eAAD,EAAkB,EAAlB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,CAAxB,EAAkC,CAAC,EAAD,EAAK,EAAL,CAAlC,EAA4C,CAAC,EAAD,EAAK,EAAL,CAA5C,EAAsD,CAAC,EAAD,EAAK,EAAL,CAAtD,CAFQ,CADZ;AAKE,IAAA,OAAO,EAAEpD,MAAM,CAAC,OAAD,CALjB;AAME,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CANpB;AAOE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CAPhB;AAQE,IAAA,YAAY,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,CARhB;AASE,IAAA,UAAU,MATZ;AAUE,IAAA,OAAO,EAAE,KAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD+C;AAAA,CAtFnD,EAoGGoD,GApGH,CAoGO,OApGP,sBAoGoC;AAAA,SAChC,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEpD,MAAM,CAAC,OAAD,CADjB;AAEE,IAAA,UAAU,EAAEA,MAAM,CAAC,UAAD,CAFpB;AAGE,IAAA,MAAM,EAAEA,MAAM,CAAC,MAAD,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgC;AAAA,CApGpC;AA4GE,eAAeG,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { storiesOf, action } from '@storybook/react';\r\nimport {LineGraph} from 'carbon-addons-data-viz-react';\r\nimport { withInfo } from '@storybook/addon-info';\r\n\r\nclass ProcessQuad extends Component {\r\n  state = {\r\n    data: this.createData(12).sort(function(a, b) {\r\n      return a[a.length - 1] - b[b.length - 1];\r\n    }),\r\n  };\r\n\r\n  componentDidMount() {\r\n    let i = 0;\r\n    this.interval = setInterval(() => {\r\n      this.updateData(i);\r\n      i++;\r\n    }, 5000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.interval);\r\n  }\r\n\r\n  //Here instead of producing randomly generated numbers, we will have three \r\n  //(or more numbers corresponding to specific features from the bluesight)\r\n  createData(num) {\r\n    let data = [];\r\n    for (let i = 0; i < num; i++) {\r\n      let tempArr = [];\r\n      let d = new Date();\r\n      let randomNum = Math.floor(Math.random() * 1000 + 1);\r\n      let randomNumTwo = Math.floor(Math.random() * 1000 + 1);\r\n      let randomNumThree = Math.floor(Math.random() * 1000 + 1);\r\n      d = d.getTime() - i * 3000;\r\n      tempArr.push(randomNum, randomNumTwo, randomNumThree, d);\r\n      data.push(tempArr);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  updateData(i) {\r\n    let data = this.createData(12).sort(function(a, b) {\r\n      return a[a.length - 1] - b[b.length - 1];\r\n    });\r\n\r\n    this.setState({\r\n      data,\r\n      xAxisLabel: `${i}`,\r\n      yAxisLabel: `${i}`,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const props = {\r\n      margin: {\r\n        top: 30,\r\n        right: 20,\r\n        bottom: 75,\r\n        left: 65,\r\n      },\r\n      height: 500,\r\n      width: 1000,\r\n      labelOffsetY: 55,\r\n      labelOffsetX: 65,\r\n      axisOffset: 16,\r\n      timeFormat: '%I:%M:%S',\r\n      yAxisLabel: this.state.yAxisLabel,\r\n      xAxisLabel: this.state.xAxisLabel,\r\n      data: this.state.data,\r\n      onHover: () => {},\r\n      onMouseOut: () => {},\r\n      id: this.props.id,\r\n      containerId: this.props.containerId,\r\n      drawLine: this.props.drawLine,\r\n      animateAxes: this.props.animateAxes,\r\n      seriesLabels: ['Bluecard F1', 'Bluecard F2', 'Bluecard F3'],\r\n    };\r\n\r\n    return <div><LineGraph {...props} /></div>\r\n  }\r\n}\r\n\r\nstoriesOf('LineGraph', module)\r\n  .add(\r\n    'Updating',\r\n    `\r\n      Line Graph.\r\n    `,\r\n    () => (\r\n      <div>\r\n        <ProcessQuad\r\n          onHover={action('Hover')}\r\n          onMouseOut={action('Mouseout')}\r\n          onBlur={action('Blur')}\r\n        />\r\n        <ProcessQuad\r\n          id=\"two\"\r\n          containerId=\"test-two\"\r\n          onHover={action('Hover')}\r\n          onMouseOut={action('Mouseout')}\r\n          onBlur={action('Blur')}\r\n        />\r\n      </div>\r\n    )\r\n  )\r\n  .add(\r\n    'Updating without drawing line',\r\n    `\r\n      Line Graph without draw line animation.\r\n    `,\r\n    () => (\r\n      <div>\r\n        <ProcessQuad\r\n          onHover={action('Hover')}\r\n          onMouseOut={action('Mouseout')}\r\n          onBlur={action('Blur')}\r\n          drawLine={false}\r\n        />\r\n        <ProcessQuad\r\n          id=\"two\"\r\n          containerId=\"test-two\"\r\n          onHover={action('Hover')}\r\n          onMouseOut={action('Mouseout')}\r\n          onBlur={action('Blur')}\r\n          drawLine={false}\r\n        />\r\n      </div>\r\n    )\r\n  )\r\n  .add(\r\n    'Updating without animating axes',\r\n    `\r\n      Line Graph without axes animation.\r\n    `,\r\n    () => (\r\n      <div>\r\n        <ProcessQuad\r\n          onHover={action('Hover')}\r\n          onMouseOut={action('Mouseout')}\r\n          onBlur={action('Blur')}\r\n          animateAxes={false}\r\n        />\r\n        <ProcessQuad\r\n          id=\"two\"\r\n          containerId=\"test-two\"\r\n          onHover={action('Hover')}\r\n          onMouseOut={action('Mouseout')}\r\n          onBlur={action('Blur')}\r\n          animateAxes={false}\r\n        />\r\n      </div>\r\n    )\r\n  )\r\n  .add('Static', ` Static Example. `, () => (\r\n    <LineGraph\r\n      datasets={[\r\n        [[43, 1507563000000], [27, 1507563900000], [33, 1507564800000]],\r\n        [\r\n          [48.633333333333, 1507563004000],\r\n          [21, 1507563900140],\r\n          [38, 1507564830000],\r\n        ],\r\n      ]}\r\n      onHover={action('Hover')}\r\n      onMouseOut={action('Mouseout')}\r\n      onBlur={action('Blur')}\r\n    />\r\n  ))\r\n  .add('Number values for X', ` Static Example. `, () => (\r\n    <LineGraph\r\n      datasets={[\r\n        [[45, 12], [23, 14], [33, 18], [31, 20], [12, 21]],\r\n        [[48.633333333333, 11], [21, 15], [38, 16], [21, 19], [31, 21]],\r\n      ]}\r\n      onHover={action('Hover')}\r\n      onMouseOut={action('Mouseout')}\r\n      onBlur={action('Blur')}\r\n      seriesLabels={['Series 1', 'Series 2', 'Series 3']}\r\n      showLegend\r\n      isXTime={false}\r\n    />\r\n  ))\r\n  .add('Empty', ` Empty Example. `, () => (\r\n    <LineGraph\r\n      onHover={action('Hover')}\r\n      onMouseOut={action('Mouseout')}\r\n      onBlur={action('Blur')}\r\n    />\r\n  ));\r\n\r\n  export default ProcessQuad;"]},"metadata":{},"sourceType":"module"}