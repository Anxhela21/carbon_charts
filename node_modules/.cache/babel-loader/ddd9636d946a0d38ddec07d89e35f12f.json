{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\AnxhelaCoba\\\\Downloads\\\\carbon-charts-react\\\\src\\\\content\\\\ClientQuad\\\\ClientQuad.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nvar propTypes = {\n  radius: PropTypes.number,\n  padding: PropTypes.number,\n  amount: PropTypes.number,\n  total: PropTypes.number,\n  size: PropTypes.string,\n  gaugePercentages: PropTypes.array,\n  id: PropTypes.string,\n  tooltipId: PropTypes.string,\n  tau: PropTypes.number,\n  labelText: PropTypes.string,\n  valueText: PropTypes.string\n};\nvar defaultProps = {\n  tau: 2 * Math.PI,\n  radius: 80,\n  padding: 30,\n  amount: 75,\n  total: 100,\n  valueText: '75%',\n  labelText: '75 out of 100GB',\n  size: 'full',\n  fillColor: '#00a68f',\n  gaugePercentages: [{\n    low: 0,\n    high: 50,\n    color: '#4B8400'\n  }, {\n    low: 50,\n    high: 75,\n    color: '#EFC100'\n  }, {\n    low: 75,\n    high: 100,\n    color: '#FF5050'\n  }],\n  id: 'gauge-container',\n  tooltipId: 'tooltip-container'\n};\n\nvar ClientQuad =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClientQuad, _Component);\n\n  function ClientQuad() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClientQuad);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClientQuad)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      boxSize: 0,\n      ratio: 0\n    };\n    return _this;\n  }\n\n  _createClass(ClientQuad, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          radius = _this$props.radius,\n          padding = _this$props.padding,\n          amount = _this$props.amount,\n          total = _this$props.total;\n      this.setState(function () {\n        return {\n          boxSize: (radius + padding) * 2,\n          ratio: amount / total\n        };\n      }, this.initialRender);\n    }\n  }, {\n    key: \"initialRender\",\n    value: function initialRender() {\n      var boxSize = this.state.boxSize;\n      var _this$props2 = this.props,\n          size = _this$props2.size,\n          padding = _this$props2.padding,\n          id = _this$props2.id;\n      this.svg = d3.select(\"#\".concat(id)).attr('width', boxSize).attr('height', size === 'half' ? boxSize / 2 + padding : boxSize).append('g').attr('transform', \"translate(\".concat(boxSize / 2, \", \").concat(boxSize / 2, \")\"));\n      this.renderSVG();\n      this.renderLabels();\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG() {\n      var _this$props3 = this.props,\n          tau = _this$props3.tau,\n          radius = _this$props3.radius,\n          size = _this$props3.size,\n          gaugePercentages = _this$props3.gaugePercentages,\n          id = _this$props3.id,\n          fillColor = _this$props3.fillColor;\n      var ratio = this.state.ratio; // Transition function\n\n      var arcTween = function arcTween(newAngle) {\n        return function (d) {\n          var interpolate;\n\n          if (size === 'half') {\n            interpolate = d3.interpolate(d.endAngle, Math.PI * (newAngle / tau));\n            var line = d3.select(\"#\".concat(id, \" .bx--gauge-line\"));\n            var percent = newAngle / tau * 100;\n            line.style('fill', function () {\n              var color;\n              gaugePercentages.forEach(function (range) {\n                if (percent >= range.low && percent <= range.high) {\n                  color = range.color;\n                }\n              });\n              return color;\n            });\n          } else {\n            interpolate = d3.interpolate(d.endAngle, newAngle);\n          }\n\n          return function (t) {\n            d.endAngle = interpolate(t);\n            return arc(d);\n          };\n        };\n      };\n\n      var arc = d3.arc().innerRadius(radius).outerRadius(radius - 10).startAngle(0);\n      this.svg.append('path').datum({\n        endAngle: size === 'half' ? Math.PI : tau\n      }).style('fill', '#dfe3e6').attr('d', arc).attr('transform', \"\".concat(size === 'half' ? 'rotate(-90)' : ''));\n      this.svg.append('path').datum({\n        endAngle: 0\n      }).style('fill', fillColor).attr('transform', \"\".concat(size === 'half' ? 'rotate(-90)' : '')).attr('class', 'bx--gauge-line').transition().duration(1000).delay(1000).attrTween('d', arcTween(ratio * tau));\n    }\n  }, {\n    key: \"renderLabels\",\n    value: function renderLabels() {\n      var _this$props4 = this.props,\n          valueText = _this$props4.valueText,\n          labelText = _this$props4.labelText,\n          tooltipId = _this$props4.tooltipId;\n      d3.select(\"#\".concat(tooltipId, \" .bx--gauge-amount\")).style('opacity', 0).transition().duration(1000).delay(1500).style('opacity', 1).text(\"\".concat(valueText));\n      d3.select(\"#\".concat(tooltipId, \" .bx--gauge-total\")).style('opacity', 0).transition().duration(1000).delay(1700).style('opacity', 1).text(\"\".concat(labelText));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          size = _this$props5.size,\n          tooltipId = _this$props5.tooltipId,\n          id = _this$props5.id;\n      var tooltipStyles = {\n        position: 'absolute',\n        top: \"\".concat(size === 'half' ? '60%' : '50%'),\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      };\n      var amountStyles = {\n        textAlign: 'center',\n        fontSize: '30px',\n        fontWeight: '600',\n        lineHeight: '1',\n        margin: '0',\n        marginBottom: '.25rem'\n      };\n      var totalStyles = {\n        fontSize: '14px',\n        margin: '0',\n        lineHeight: '1',\n        whiteSpace: 'nowrap'\n      };\n      return React.createElement(\"div\", {\n        className: \"bx--graph-container\",\n        style: {\n          position: 'relative',\n          width: this.state.boxSize\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bx--gauge-tooltip\",\n        id: tooltipId,\n        style: tooltipStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"bx--gauge-amount\",\n        style: amountStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Place\"), React.createElement(\"p\", {\n        className: \"bx--gauge-total\",\n        style: totalStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Holder\")));\n    }\n  }]);\n\n  return ClientQuad;\n}(Component);\n\nClientQuad.propTypes = propTypes;\nClientQuad.defaultProps = defaultProps;\nexport default ClientQuad;","map":{"version":3,"sources":["C:\\Users\\AnxhelaCoba\\Downloads\\carbon-charts-react\\src\\content\\ClientQuad\\ClientQuad.js"],"names":["PropTypes","React","Component","d3","propTypes","radius","number","padding","amount","total","size","string","gaugePercentages","array","id","tooltipId","tau","labelText","valueText","defaultProps","Math","PI","fillColor","low","high","color","ClientQuad","state","boxSize","ratio","props","setState","initialRender","svg","select","attr","append","renderSVG","renderLabels","arcTween","newAngle","d","interpolate","endAngle","line","percent","style","forEach","range","t","arc","innerRadius","outerRadius","startAngle","datum","transition","duration","delay","attrTween","text","tooltipStyles","position","top","left","transform","amountStyles","textAlign","fontSize","fontWeight","lineHeight","margin","marginBottom","totalStyles","whiteSpace","width"],"mappings":"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","sourcesContent":["\r\n      import PropTypes from 'prop-types';\r\n      import React, { Component } from 'react';\r\n      import * as d3 from 'd3';\r\n      \r\n      const propTypes = {\r\n        radius: PropTypes.number,\r\n        padding: PropTypes.number,\r\n        amount: PropTypes.number,\r\n        total: PropTypes.number,\r\n        size: PropTypes.string,\r\n        gaugePercentages: PropTypes.array,\r\n        id: PropTypes.string,\r\n        tooltipId: PropTypes.string,\r\n        tau: PropTypes.number,\r\n        labelText: PropTypes.string,\r\n        valueText: PropTypes.string,\r\n      };\r\n      \r\n      const defaultProps = {\r\n        tau: 2 * Math.PI,\r\n        radius: 80,\r\n        padding: 30,\r\n        amount: 75,\r\n        total: 100,\r\n        valueText: '75%',\r\n        labelText: '75 out of 100GB',\r\n        size: 'full',\r\n        fillColor: '#00a68f',\r\n        gaugePercentages: [\r\n          { low: 0, high: 50, color: '#4B8400' },\r\n          { low: 50, high: 75, color: '#EFC100' },\r\n          { low: 75, high: 100, color: '#FF5050' },\r\n        ],\r\n        id: 'gauge-container',\r\n        tooltipId: 'tooltip-container',\r\n      };\r\n      \r\n      class ClientQuad extends Component {\r\n        state = {\r\n          boxSize: 0,\r\n          ratio: 0,\r\n        };\r\n      \r\n        componentDidMount() {\r\n          const { radius, padding, amount, total } = this.props;\r\n      \r\n          this.setState(() => {\r\n            return {\r\n              boxSize: (radius + padding) * 2,\r\n              ratio: amount / total,\r\n            };\r\n          }, this.initialRender);\r\n        }\r\n      \r\n        initialRender() {\r\n          const { boxSize } = this.state;\r\n          const { size, padding, id } = this.props;\r\n      \r\n          this.svg = d3\r\n            .select(`#${id}`)\r\n            .attr('width', boxSize)\r\n            .attr('height', size === 'half' ? boxSize / 2 + padding : boxSize)\r\n            .append('g')\r\n            .attr('transform', `translate(${boxSize / 2}, ${boxSize / 2})`);\r\n      \r\n          this.renderSVG();\r\n          this.renderLabels();\r\n        }\r\n      \r\n        renderSVG() {\r\n          const { tau, radius, size, gaugePercentages, id, fillColor } = this.props;\r\n          const { ratio } = this.state;\r\n      \r\n          // Transition function\r\n          const arcTween = function(newAngle) {\r\n            return function(d) {\r\n              let interpolate;\r\n              if (size === 'half') {\r\n                interpolate = d3.interpolate(d.endAngle, Math.PI * (newAngle / tau));\r\n      \r\n                const line = d3.select(`#${id} .bx--gauge-line`);\r\n                const percent = (newAngle / tau) * 100;\r\n      \r\n                line.style('fill', () => {\r\n                  let color;\r\n                  gaugePercentages.forEach(range => {\r\n                    if (percent >= range.low && percent <= range.high) {\r\n                      color = range.color;\r\n                    }\r\n                  });\r\n      \r\n                  return color;\r\n                });\r\n              } else {\r\n                interpolate = d3.interpolate(d.endAngle, newAngle);\r\n              }\r\n      \r\n              return function(t) {\r\n                d.endAngle = interpolate(t);\r\n                return arc(d);\r\n              };\r\n            };\r\n          };\r\n      \r\n          const arc = d3\r\n            .arc()\r\n            .innerRadius(radius)\r\n            .outerRadius(radius - 10)\r\n            .startAngle(0);\r\n      \r\n          this.svg\r\n            .append('path')\r\n            .datum({ endAngle: size === 'half' ? Math.PI : tau })\r\n            .style('fill', '#dfe3e6')\r\n            .attr('d', arc)\r\n            .attr('transform', `${size === 'half' ? 'rotate(-90)' : ''}`);\r\n      \r\n          this.svg\r\n            .append('path')\r\n            .datum({ endAngle: 0 })\r\n            .style('fill', fillColor)\r\n            .attr('transform', `${size === 'half' ? 'rotate(-90)' : ''}`)\r\n            .attr('class', 'bx--gauge-line')\r\n            .transition()\r\n            .duration(1000)\r\n            .delay(1000)\r\n            .attrTween('d', arcTween(ratio * tau));\r\n        }\r\n      \r\n        renderLabels() {\r\n          const { valueText, labelText, tooltipId } = this.props;\r\n      \r\n          d3.select(`#${tooltipId} .bx--gauge-amount`)\r\n            .style('opacity', 0)\r\n            .transition()\r\n            .duration(1000)\r\n            .delay(1500)\r\n            .style('opacity', 1)\r\n            .text(`${valueText}`);\r\n      \r\n          d3.select(`#${tooltipId} .bx--gauge-total`)\r\n            .style('opacity', 0)\r\n            .transition()\r\n            .duration(1000)\r\n            .delay(1700)\r\n            .style('opacity', 1)\r\n            .text(`${labelText}`);\r\n        }\r\n      \r\n        render() {\r\n          const { size, tooltipId, id } = this.props;\r\n          const tooltipStyles = {\r\n            position: 'absolute',\r\n            top: `${size === 'half' ? '60%' : '50%'}`,\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n          };\r\n      \r\n          const amountStyles = {\r\n            textAlign: 'center',\r\n            fontSize: '30px',\r\n            fontWeight: '600',\r\n            lineHeight: '1',\r\n            margin: '0',\r\n            marginBottom: '.25rem',\r\n          };\r\n      \r\n          const totalStyles = {\r\n            fontSize: '14px',\r\n            margin: '0',\r\n            lineHeight: '1',\r\n            whiteSpace: 'nowrap',\r\n          };\r\n      \r\n          return (\r\n            <div\r\n              className=\"bx--graph-container\"\r\n              style={{ position: 'relative', width: this.state.boxSize }}>\r\n              <svg id={id} />\r\n              <div className=\"bx--gauge-tooltip\" id={tooltipId} style={tooltipStyles}>\r\n                <p className=\"bx--gauge-amount\" style={amountStyles}>\r\n                  Place\r\n                </p>\r\n                <p className=\"bx--gauge-total\" style={totalStyles}>\r\n                  Holder\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n          );\r\n        }\r\n      }\r\n      \r\n      ClientQuad.propTypes = propTypes;\r\n      ClientQuad.defaultProps = defaultProps;\r\n      \r\nexport default ClientQuad;"]},"metadata":{},"sourceType":"module"}