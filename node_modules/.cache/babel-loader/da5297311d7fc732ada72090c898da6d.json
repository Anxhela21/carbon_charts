{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.is-array\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactAddonsCreateFragment = _interopRequireDefault(require(\"react-addons-create-fragment\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar getValueStyles = function getValueStyles() {\n  var codeColors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    func: {\n      color: codeColors.func || '#170'\n    },\n    attr: {\n      color: codeColors.attr || '#666'\n    },\n    object: {\n      color: codeColors.object || '#666'\n    },\n    array: {\n      color: codeColors.array || '#666'\n    },\n    number: {\n      color: codeColors.number || '#a11'\n    },\n    string: {\n      color: codeColors.string || '#22a',\n      wordBreak: 'break-word'\n    },\n    bool: {\n      color: codeColors.bool || '#a11'\n    },\n    empty: {\n      color: '#444'\n    }\n  };\n};\n\nfunction indent(breakIntoNewLines, level, isBlock) {\n  return breakIntoNewLines && _react[\"default\"].createElement(\"span\", null, _react[\"default\"].createElement(\"br\", null), \"\".concat(Array(level).join('  '), \"  \"), !isBlock && '  ');\n}\n\nfunction PreviewArray(_ref) {\n  var val = _ref.val,\n      level = _ref.level,\n      maxPropArrayLength = _ref.maxPropArrayLength,\n      maxPropStringLength = _ref.maxPropStringLength,\n      maxPropsIntoLine = _ref.maxPropsIntoLine,\n      valueStyles = _ref.valueStyles;\n  var items = {};\n  var breakIntoNewLines = val.length > maxPropsIntoLine;\n  val.slice(0, maxPropArrayLength).forEach(function (item, i) {\n    items[\"n\".concat(i)] = _react[\"default\"].createElement(\"span\", null, indent(breakIntoNewLines, level), _react[\"default\"].createElement(PropVal, {\n      val: item,\n      level: level + 1,\n      valueStyles: valueStyles,\n      maxPropStringLength: maxPropStringLength,\n      maxPropsIntoLine: maxPropsIntoLine\n    }));\n    items[\"c\".concat(i)] = ',';\n  });\n\n  if (val.length > maxPropArrayLength) {\n    items.last = _react[\"default\"].createElement(\"span\", null, indent(breakIntoNewLines, level), '…');\n  } else {\n    delete items[\"c\".concat(val.length - 1)];\n  }\n\n  return _react[\"default\"].createElement(\"span\", {\n    style: valueStyles.array\n  }, \"[\", (0, _reactAddonsCreateFragment[\"default\"])(items), indent(breakIntoNewLines, level, true), \"]\");\n}\n\nPreviewArray.propTypes = {\n  val: _propTypes[\"default\"].any,\n  // eslint-disable-line\n  maxPropArrayLength: _propTypes[\"default\"].number.isRequired,\n  maxPropStringLength: _propTypes[\"default\"].number.isRequired,\n  maxPropsIntoLine: _propTypes[\"default\"].number.isRequired,\n  level: _propTypes[\"default\"].number.isRequired,\n  valueStyles: _propTypes[\"default\"].shape({\n    func: _propTypes[\"default\"].object,\n    attr: _propTypes[\"default\"].object,\n    object: _propTypes[\"default\"].object,\n    array: _propTypes[\"default\"].object,\n    number: _propTypes[\"default\"].object,\n    string: _propTypes[\"default\"].object,\n    bool: _propTypes[\"default\"].object,\n    empty: _propTypes[\"default\"].object\n  }).isRequired\n};\n\nfunction PreviewObject(_ref2) {\n  var val = _ref2.val,\n      level = _ref2.level,\n      maxPropObjectKeys = _ref2.maxPropObjectKeys,\n      maxPropStringLength = _ref2.maxPropStringLength,\n      maxPropsIntoLine = _ref2.maxPropsIntoLine,\n      valueStyles = _ref2.valueStyles;\n  var names = Object.keys(val);\n  var items = {};\n  var breakIntoNewLines = names.length > maxPropsIntoLine;\n  names.slice(0, maxPropObjectKeys).forEach(function (name, i) {\n    items[\"k\".concat(i)] = _react[\"default\"].createElement(\"span\", null, indent(breakIntoNewLines, level), _react[\"default\"].createElement(\"span\", {\n      style: valueStyles.attr\n    }, name));\n    items[\"c\".concat(i)] = ': ';\n    items[\"v\".concat(i)] = _react[\"default\"].createElement(PropVal, {\n      val: val[name],\n      level: level + 1,\n      valueStyles: valueStyles,\n      maxPropStringLength: maxPropStringLength,\n      maxPropsIntoLine: maxPropsIntoLine\n    });\n    items[\"m\".concat(i)] = ',';\n  });\n\n  if (names.length > maxPropObjectKeys) {\n    items.rest = _react[\"default\"].createElement(\"span\", null, indent(breakIntoNewLines, level), '…');\n  } else {\n    delete items[\"m\".concat(names.length - 1)];\n  }\n\n  return _react[\"default\"].createElement(\"span\", {\n    style: valueStyles.object\n  }, '{', (0, _reactAddonsCreateFragment[\"default\"])(items), indent(breakIntoNewLines, level, true), '}');\n}\n\nPreviewObject.propTypes = {\n  val: _propTypes[\"default\"].any,\n  // eslint-disable-line\n  maxPropObjectKeys: _propTypes[\"default\"].number.isRequired,\n  maxPropStringLength: _propTypes[\"default\"].number.isRequired,\n  maxPropsIntoLine: _propTypes[\"default\"].number.isRequired,\n  level: _propTypes[\"default\"].number.isRequired,\n  valueStyles: _propTypes[\"default\"].shape({\n    func: _propTypes[\"default\"].object,\n    attr: _propTypes[\"default\"].object,\n    object: _propTypes[\"default\"].object,\n    array: _propTypes[\"default\"].object,\n    number: _propTypes[\"default\"].object,\n    string: _propTypes[\"default\"].object,\n    bool: _propTypes[\"default\"].object,\n    empty: _propTypes[\"default\"].object\n  }).isRequired\n};\n\nfunction PropVal(props) {\n  var level = props.level,\n      maxPropObjectKeys = props.maxPropObjectKeys,\n      maxPropArrayLength = props.maxPropArrayLength,\n      maxPropStringLength = props.maxPropStringLength,\n      maxPropsIntoLine = props.maxPropsIntoLine,\n      theme = props.theme;\n  var val = props.val;\n\n  var _ref3 = theme || {},\n      codeColors = _ref3.codeColors;\n\n  var content = null;\n  var valueStyles = props.valueStyles || getValueStyles(codeColors);\n\n  if (typeof val === 'number') {\n    content = _react[\"default\"].createElement(\"span\", {\n      style: valueStyles.number\n    }, val);\n  } else if (typeof val === 'string') {\n    if (val.length > maxPropStringLength) {\n      val = \"\".concat(val.slice(0, maxPropStringLength), \"\\u2026\");\n    }\n\n    if (level > 1) {\n      val = \"'\".concat(val, \"'\");\n    }\n\n    content = _react[\"default\"].createElement(\"span\", {\n      style: valueStyles.string\n    }, val);\n  } else if (typeof val === 'boolean') {\n    content = _react[\"default\"].createElement(\"span\", {\n      style: valueStyles.bool\n    }, \"\".concat(val));\n  } else if (Array.isArray(val)) {\n    content = _react[\"default\"].createElement(PreviewArray, {\n      val: val,\n      level: level,\n      maxPropArrayLength: maxPropArrayLength,\n      maxPropStringLength: maxPropStringLength,\n      maxPropsIntoLine: maxPropsIntoLine,\n      valueStyles: valueStyles\n    });\n  } else if (typeof val === 'function') {\n    content = _react[\"default\"].createElement(\"span\", {\n      style: valueStyles.func\n    }, val.name || 'anonymous');\n  } else if (!val) {\n    content = _react[\"default\"].createElement(\"span\", {\n      style: valueStyles.empty\n    }, \"\".concat(val));\n  } else if (_typeof(val) !== 'object') {\n    content = _react[\"default\"].createElement(\"span\", null, \"\\u2026\");\n  } else if (_react[\"default\"].isValidElement(val)) {\n    content = _react[\"default\"].createElement(\"span\", {\n      style: valueStyles.object\n    }, \"<\".concat(val.type.displayName || val.type.name || val.type, \" />\"));\n  } else {\n    content = _react[\"default\"].createElement(PreviewObject, {\n      val: val,\n      level: level,\n      maxPropObjectKeys: maxPropObjectKeys,\n      maxPropStringLength: maxPropStringLength,\n      maxPropsIntoLine: maxPropsIntoLine,\n      valueStyles: valueStyles\n    });\n  }\n\n  return content;\n}\n\nPropVal.defaultProps = {\n  val: null,\n  maxPropObjectKeys: 3,\n  maxPropArrayLength: 3,\n  maxPropStringLength: 50,\n  maxPropsIntoLine: 3,\n  level: 1,\n  theme: {},\n  valueStyles: null\n};\nPropVal.propTypes = {\n  val: _propTypes[\"default\"].any,\n  // eslint-disable-line\n  maxPropObjectKeys: _propTypes[\"default\"].number,\n  maxPropArrayLength: _propTypes[\"default\"].number,\n  maxPropStringLength: _propTypes[\"default\"].number,\n  maxPropsIntoLine: _propTypes[\"default\"].number,\n  level: _propTypes[\"default\"].number,\n  theme: _propTypes[\"default\"].shape({\n    codeColors: _propTypes[\"default\"].object\n  }),\n  valueStyles: _propTypes[\"default\"].shape({\n    func: _propTypes[\"default\"].object,\n    attr: _propTypes[\"default\"].object,\n    object: _propTypes[\"default\"].object,\n    array: _propTypes[\"default\"].object,\n    number: _propTypes[\"default\"].object,\n    string: _propTypes[\"default\"].object,\n    bool: _propTypes[\"default\"].object,\n    empty: _propTypes[\"default\"].object\n  })\n};\nvar _default = PropVal;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}