{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.index-of\");\n\nrequire(\"core-js/modules/es.array.is-array\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.array.sort\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.assign\");\n\nrequire(\"core-js/modules/es.object.create\");\n\nrequire(\"core-js/modules/es.object.define-properties\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.entries\");\n\nrequire(\"core-js/modules/es.object.freeze\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.object.values\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nrequire(\"core-js/modules/web.timers\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _global = require(\"global\");\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _eventemitter = _interopRequireDefault(require(\"eventemitter3\"));\n\nvar _memoizerific = _interopRequireDefault(require(\"memoizerific\"));\n\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\n\nvar _commonTags = require(\"common-tags\");\n\nvar _coreEvents = _interopRequireDefault(require(\"@storybook/core-events\"));\n\nvar _clientLogger = require(\"@storybook/client-logger\");\n\nvar _utils = require(\"@storybook/router/utils\");\n\nvar _pathToId = _interopRequireDefault(require(\"./pathToId\"));\n\nvar _queryparams = require(\"./queryparams\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        Story with id \", \" already exists in the store!\\n\\n        Perhaps you added the same story twice, or you have a name collision?\\n        Story ids need to be unique -- ensure you aren't using the same names modolo url-sanitization.\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n} // TODO: these are copies from components/nav/lib\n// refactor to DRY\n\n\nvar toKey = function toKey(input) {\n  return input.replace(/[^a-z0-9]+([a-z0-9])/gi, function () {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    return params[1].toUpperCase();\n  });\n};\n\nvar toChild = function toChild(it) {\n  return Object.assign({}, it);\n};\n\nvar count = 0;\n\nfunction getId() {\n  count += 1;\n  return count;\n}\n\nvar toExtracted = function toExtracted(obj) {\n  return Object.entries(obj).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (typeof value === 'function') {\n      return acc;\n    }\n\n    if (Array.isArray(value)) {\n      return Object.assign(acc, _defineProperty({}, key, value.slice().sort()));\n    }\n\n    return Object.assign(acc, _defineProperty({}, key, value));\n  }, {});\n};\n\nvar getIdFromLegacyQuery = function getIdFromLegacyQuery(_ref3) {\n  var path = _ref3.path,\n      selectedKind = _ref3.selectedKind,\n      selectedStory = _ref3.selectedStory;\n  return path && (0, _pathToId[\"default\"])(path) || selectedKind && selectedStory && (0, _utils.toId)(selectedKind, selectedStory);\n};\n\nvar StoryStore =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(StoryStore, _EventEmitter);\n\n  function StoryStore(_params) {\n    var _this;\n\n    _classCallCheck(this, StoryStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StoryStore).call(this));\n\n    _this.setChannel = function (channel) {\n      _this._channel = channel;\n    };\n\n    _this.getIdOnPath = function () {\n      var _getQueryParams = (0, _queryparams.getQueryParams)(),\n          id = _getQueryParams.id;\n\n      return id;\n    };\n\n    _this.setPath = function (storyId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var path = \"\".concat(_global.document.location.pathname, \"?\").concat(_qs[\"default\"].stringify(Object.assign({}, params, {\n        id: storyId\n      })));\n\n      _global.history.replaceState({}, '', path);\n    };\n\n    _this.fromId = function (id) {\n      try {\n        var data = _this._data[id];\n\n        if (!data || !data.getDecorated) {\n          return null;\n        }\n\n        return data;\n      } catch (e) {\n        _clientLogger.logger.warn('failed to get story:', _this._data);\n\n        _clientLogger.logger.error(e);\n\n        return {};\n      }\n    };\n\n    _this.setSelection = function (data) {\n      _this._selection = data;\n      setTimeout(function () {\n        return _this.emit(_coreEvents[\"default\"].STORY_RENDER);\n      }, 1);\n    };\n\n    _this.getSelection = function () {\n      return _this._selection;\n    };\n\n    _this.remove = function (id) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          _data = _assertThisInitialize._data;\n\n      var story = _data[id];\n      delete _data[id];\n\n      if (story) {\n        var kind = story.kind,\n            name = story.name;\n\n        var kindData = _this._legacydata[toKey(kind)];\n\n        if (kindData) {\n          delete kindData.stories[toKey(name)];\n        }\n      }\n    };\n\n    _this.pushToManager = (0, _debounce[\"default\"])(function () {\n      if (_this._channel) {\n        var stories = _this.extract(); // send to the parent frame.\n\n\n        _this._channel.emit(_coreEvents[\"default\"].SET_STORIES, {\n          stories: stories\n        });\n      }\n    }, 0);\n    _this._legacydata = {};\n    _this._data = {};\n    _this._revision = 0;\n    _this._selection = {};\n    _this._channel = _params.channel;\n\n    _this.on(_coreEvents[\"default\"].STORY_INIT, function () {\n      var storyId = _this.getIdOnPath();\n\n      if (!storyId) {\n        var query = (0, _queryparams.getQueryParams)();\n        storyId = getIdFromLegacyQuery(query);\n\n        if (storyId) {\n          var path = query.path,\n              selectedKind = query.selectedKind,\n              selectedStory = query.selectedStory,\n              rest = _objectWithoutProperties(query, [\"path\", \"selectedKind\", \"selectedStory\"]);\n\n          _this.setPath(storyId, rest);\n        }\n      }\n\n      _this.setSelection(_this.fromId(storyId));\n    });\n\n    return _this;\n  }\n\n  _createClass(StoryStore, [{\n    key: \"setSeparators\",\n    value: function setSeparators(data) {\n      this.separators = data;\n    }\n  }, {\n    key: \"raw\",\n    value: function raw() {\n      var _this2 = this;\n\n      return Object.values(this._data).filter(function (i) {\n        return !!i.getDecorated;\n      }).map(function (_ref4) {\n        var id = _ref4.id;\n        return _this2.fromId(id);\n      });\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      // removes function values from all stories so they are safe to transport over the channel\n      return Object.entries(this._data).reduce(function (a, _ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            k = _ref6[0],\n            v = _ref6[1];\n\n        return Object.assign(a, _defineProperty({}, k, toExtracted(v)));\n      }, {});\n    }\n  }, {\n    key: \"addStory\",\n    value: function addStory(_ref7, _ref8) {\n      var id = _ref7.id,\n          kind = _ref7.kind,\n          name = _ref7.name,\n          original = _ref7.storyFn,\n          _ref7$parameters = _ref7.parameters,\n          parameters = _ref7$parameters === void 0 ? {} : _ref7$parameters;\n      var getDecorators = _ref8.getDecorators,\n          applyDecorators = _ref8.applyDecorators;\n      var _data = this._data;\n\n      if (_data[id]) {\n        _clientLogger.logger.warn((0, _commonTags.stripIndents)(_templateObject(), id));\n      }\n\n      var identification = {\n        id: id,\n        kind: kind,\n        name: name,\n        story: name // legacy\n\n      }; // immutable original storyFn\n\n      var getOriginal = function getOriginal() {\n        return original;\n      }; // lazily decorate the story when it's loaded\n\n\n      var getDecorated = (0, _memoizerific[\"default\"])(1)(function () {\n        return applyDecorators(getOriginal(), getDecorators());\n      });\n\n      var storyFn = function storyFn(p) {\n        return getDecorated()(Object.assign({}, identification, {\n          parameters: Object.assign({}, parameters, p)\n        }));\n      };\n\n      _data[id] = toChild(Object.assign({}, identification, {\n        getDecorated: getDecorated,\n        getOriginal: getOriginal,\n        storyFn: storyFn,\n        parameters: parameters\n      })); // LEGACY DATA\n\n      this.addLegacyStory({\n        kind: kind,\n        name: name,\n        storyFn: storyFn,\n        parameters: parameters\n      }); // LET'S SEND IT TO THE MANAGER\n\n      this.pushToManager();\n    }\n  }, {\n    key: \"getRevision\",\n    // OLD apis\n    value: function getRevision() {\n      return this._revision;\n    }\n  }, {\n    key: \"incrementRevision\",\n    value: function incrementRevision() {\n      this._revision += 1;\n    }\n  }, {\n    key: \"addLegacyStory\",\n    value: function addLegacyStory(_ref9) {\n      var kind = _ref9.kind,\n          name = _ref9.name,\n          storyFn = _ref9.storyFn,\n          _ref9$parameters = _ref9.parameters,\n          parameters = _ref9$parameters === void 0 ? {} : _ref9$parameters;\n      var k = toKey(kind);\n\n      if (!this._legacydata[k]) {\n        this._legacydata[k] = {\n          kind: kind,\n          fileName: parameters.fileName,\n          index: getId(),\n          stories: {}\n        };\n      }\n\n      this._legacydata[k].stories[toKey(name)] = {\n        name: name,\n        // kind,\n        index: getId(),\n        story: storyFn,\n        parameters: parameters\n      };\n    }\n  }, {\n    key: \"getStoryKinds\",\n    value: function getStoryKinds() {\n      return Object.values(this._legacydata).filter(function (kind) {\n        return Object.keys(kind.stories).length > 0;\n      }).sort(function (info1, info2) {\n        return info1.index - info2.index;\n      }).map(function (info) {\n        return info.kind;\n      });\n    }\n  }, {\n    key: \"getStories\",\n    value: function getStories(kind) {\n      var _this3 = this;\n\n      var key = toKey(kind);\n\n      if (!this._legacydata[key]) {\n        return [];\n      }\n\n      return Object.keys(this._legacydata[key].stories).map(function (name) {\n        return _this3._legacydata[key].stories[name];\n      }).sort(function (info1, info2) {\n        return info1.index - info2.index;\n      }).map(function (info) {\n        return info.name;\n      });\n    }\n  }, {\n    key: \"getStoryFileName\",\n    value: function getStoryFileName(kind) {\n      var key = toKey(kind);\n      var storiesKind = this._legacydata[key];\n\n      if (!storiesKind) {\n        return null;\n      }\n\n      return storiesKind.fileName;\n    }\n  }, {\n    key: \"getStoryAndParameters\",\n    value: function getStoryAndParameters(kind, name) {\n      if (!kind || !name) {\n        return null;\n      }\n\n      var storiesKind = this._legacydata[toKey(kind)];\n\n      if (!storiesKind) {\n        return null;\n      }\n\n      var storyInfo = storiesKind.stories[toKey(name)];\n\n      if (!storyInfo) {\n        return null;\n      }\n\n      var story = storyInfo.story,\n          parameters = storyInfo.parameters;\n      return {\n        story: story,\n        parameters: parameters\n      };\n    }\n  }, {\n    key: \"getStory\",\n    value: function getStory(kind, name) {\n      var data = this.getStoryAndParameters(kind, name);\n      return data && data.story;\n    }\n  }, {\n    key: \"getStoryWithContext\",\n    value: function getStoryWithContext(kind, name) {\n      var data = this.getStoryAndParameters(kind, name);\n\n      if (!data) {\n        return null;\n      }\n\n      var story = data.story;\n      return story;\n    }\n  }, {\n    key: \"removeStoryKind\",\n    value: function removeStoryKind(kind) {\n      if (this.hasStoryKind(kind)) {\n        this._legacydata[toKey(kind)].stories = {};\n        this._data = Object.entries(this._data).reduce(function (acc, _ref10) {\n          var _ref11 = _slicedToArray(_ref10, 2),\n              id = _ref11[0],\n              story = _ref11[1];\n\n          if (story.kind !== kind) {\n            Object.assign(acc, _defineProperty({}, id, story));\n          }\n\n          return acc;\n        }, {});\n      }\n    }\n  }, {\n    key: \"hasStoryKind\",\n    value: function hasStoryKind(kind) {\n      return Boolean(this._legacydata[toKey(kind)]);\n    }\n  }, {\n    key: \"hasStory\",\n    value: function hasStory(kind, name) {\n      return Boolean(this.getStory(kind, name));\n    }\n  }, {\n    key: \"dumpStoryBook\",\n    value: function dumpStoryBook() {\n      var _this4 = this;\n\n      var data = this.getStoryKinds().map(function (kind) {\n        return {\n          kind: kind,\n          stories: _this4.getStories(kind)\n        };\n      });\n      return data;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return Object.keys(this._legacydata).length;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      var _this5 = this;\n\n      this.getStoryKinds().forEach(function (kind) {\n        return delete _this5._legacydata[toKey(kind)];\n      });\n    }\n  }]);\n\n  return StoryStore;\n}(_eventemitter[\"default\"]);\n\nexports[\"default\"] = StoryStore;","map":null,"metadata":{},"sourceType":"script"}