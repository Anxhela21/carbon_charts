{"ast":null,"code":"import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nvar propTypes = {\n  data: PropTypes.array,\n  radius: PropTypes.number,\n  formatFunction: PropTypes.func,\n  id: PropTypes.string,\n  color: PropTypes.array,\n  onHover: PropTypes.func\n};\nvar defaultProps = {\n  data: [['Gryffindor', 100]],\n  radius: 96,\n  formatFunction: function formatFunction(value) {\n    return value;\n  },\n  color: ['#00a68f', '#3b1a40', '#473793', '#3c6df0', '#56D2BB'],\n  id: 'graph-container'\n};\n\nvar PieChart = function (_Component) {\n  _inherits(PieChart, _Component);\n\n  function PieChart() {\n    _classCallCheck(this, PieChart);\n\n    return _possibleConstructorReturn(this, (PieChart.__proto__ || _Object$getPrototypeOf(PieChart)).apply(this, arguments));\n  }\n\n  _createClass(PieChart, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.width = this.props.radius * 2;\n      this.height = this.props.radius * 2 + 24;\n      this.renderSVG();\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      return !_.isEqual(this.props, nextProps);\n    }\n  }, {\n    key: 'renderSVG',\n    value: function renderSVG() {\n      var _props = this.props,\n          data = _props.data,\n          radius = _props.radius,\n          formatFunction = _props.formatFunction,\n          id = _props.id,\n          onHover = _props.onHover;\n      var color = d3.scaleOrdinal(this.props.color);\n      this.svg = d3.select(this.svgNode).attr('width', this.width).attr('height', this.height).append('g').attr('class', 'group-container').attr('transform', 'translate(' + this.width / 2 + ', ' + this.height / 2 + ')');\n      var pie = d3.pie().sort(null).value(function (d) {\n        return d[1];\n      });\n      var path = d3.arc().outerRadius(radius - 10).innerRadius(radius - 40);\n      var pathTwo = d3.arc().outerRadius(radius).innerRadius(radius - 40);\n      var arc = this.svg.selectAll('.arc').data(pie(data)).enter().append('g').attr('class', 'arc');\n      var arcs = arc.append('path').attr('fill', function (d, i) {\n        return color(i);\n      }).attr('stroke-width', 2).attr('stroke', '#FFFFFF').attr('d', path);\n      arcs.on('mouseover', function (d) {\n        d3.select(this).transition().style('cursor', 'pointer').attr('d', pathTwo);\n        d3.select('#' + id + ' .bx--pie-tooltip').style('display', 'inherit');\n        d3.select('#' + id + ' .bx--pie-key').text('' + d.data[0]);\n        d3.select('#' + id + ' .bx--pie-value').text('' + formatFunction(d.data[1]));\n\n        if (onHover) {\n          onHover(true, d.data[0]);\n        }\n      }).on('mouseout', function () {\n        d3.select('#' + id + ' .bx--pie-tooltip').style('display', 'none');\n        d3.select(this).transition().attr('d', path);\n\n        if (onHover) {\n          onHover(false);\n        }\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var id = this.props.id;\n      var tooltipStyles = {\n        display: 'none',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n      };\n      var keyStyles = {\n        fontSize: '14px',\n        fontWeight: '400',\n        textAlign: 'center',\n        color: '#5A6872'\n      };\n      var valueStyles = {\n        fontSize: '29px',\n        fontWeight: '300',\n        textAlign: 'center',\n        lineHeight: '1'\n      };\n      this.renderSVG();\n      return React.createElement('div', {\n        className: 'bx--graph-container',\n        id: id,\n        style: {\n          position: 'relative',\n          width: this.width,\n          height: this.height\n        }\n      }, React.createElement('svg', {\n        ref: function ref(node) {\n          return _this2.svgNode = node;\n        }\n      }), React.createElement('div', {\n        className: 'bx--pie-tooltip',\n        style: tooltipStyles\n      }, React.createElement('p', {\n        className: 'bx--pie-value',\n        style: valueStyles\n      }), React.createElement('p', {\n        className: 'bx--pie-key',\n        style: keyStyles\n      })));\n    }\n  }]);\n\n  return PieChart;\n}(Component);\n\nPieChart.propTypes = propTypes;\nPieChart.defaultProps = defaultProps;\nexport default PieChart;","map":null,"metadata":{},"sourceType":"module"}