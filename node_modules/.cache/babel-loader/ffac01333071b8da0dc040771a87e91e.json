{"ast":null,"code":"var TestProcess = function TestProcess() {\n  nv.addGraph(function () {\n    var chart = nv.models.cumulativeLineChart().x(function (d) {\n      return d[0];\n    }) //adjusting, 100% is 1.00, not 100 as it is in the data\n    .y(function (d) {\n      return d[1] / 100;\n    }).color(d3.scaleOrdinal(d3.schemeCategory10).range()).useInteractiveGuideline(true);\n    chart.xAxis.tickFormat(function (d) {\n      return d3.timeParse(\"%c\")(new Date(d));\n    });\n    chart.yAxis.tickFormat(d3.format(',.1%'));\n    d3.select('#chart svg').datum(data).transition().duration(500).call(chart);\n    nv.utils.windowResize(chart.update);\n    return chart;\n  });\n};\n\nexport default TestProcess;","map":{"version":3,"sources":["C:\\Users\\AnxhelaCoba\\Downloads\\carbon-charts-react\\src\\content\\TestProcess\\TestProcess.js"],"names":["TestProcess","nv","addGraph","chart","models","cumulativeLineChart","x","d","y","color","d3","scaleOrdinal","schemeCategory10","range","useInteractiveGuideline","xAxis","tickFormat","timeParse","Date","yAxis","format","select","datum","data","transition","duration","call","utils","windowResize","update"],"mappings":"AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AAE1BC,EAAAA,EAAE,CAACC,QAAH,CAAY,YAAW;AACrB,QAAIC,KAAK,GAAGF,EAAE,CAACG,MAAH,CAAUC,mBAAV,GACTC,CADS,CACP,UAASC,CAAT,EAAY;AAAE,aAAOA,CAAC,CAAC,CAAD,CAAR;AAAa,KADpB,EAEV;AAFU,KAGTC,CAHS,CAGP,UAASD,CAAT,EAAY;AAAE,aAAOA,CAAC,CAAC,CAAD,CAAD,GAAO,GAAd;AAAmB,KAH1B,EAITE,KAJS,CAIFC,EAAE,CAACC,YAAH,CAAgBD,EAAE,CAACE,gBAAnB,EAAqCC,KAArC,EAJE,EAKTC,uBALS,CAKe,IALf,CAAZ;AAWAX,IAAAA,KAAK,CAACY,KAAN,CACGC,UADH,CACc,UAAST,CAAT,EAAY;AACtB,aAAOG,EAAE,CAACO,SAAH,CAAa,IAAb,EAAmB,IAAIC,IAAJ,CAASX,CAAT,CAAnB,CAAP;AACD,KAHH;AAKAJ,IAAAA,KAAK,CAACgB,KAAN,CAAYH,UAAZ,CAAuBN,EAAE,CAACU,MAAH,CAAU,MAAV,CAAvB;AAEAV,IAAAA,EAAE,CAACW,MAAH,CAAU,YAAV,EACGC,KADH,CACSC,IADT,EAEGC,UAFH,GAEgBC,QAFhB,CAEyB,GAFzB,EAGGC,IAHH,CAGQvB,KAHR;AAMAF,IAAAA,EAAE,CAAC0B,KAAH,CAASC,YAAT,CAAsBzB,KAAK,CAAC0B,MAA5B;AAEA,WAAO1B,KAAP;AACD,GA5BD;AA8BC,CAhCD;;AAkCA,eAAeH,WAAf","sourcesContent":["const TestProcess = () => {\r\n\r\nnv.addGraph(function() {\r\n  var chart = nv.models.cumulativeLineChart()\r\n    .x(function(d) { return d[0] })\r\n    //adjusting, 100% is 1.00, not 100 as it is in the data\r\n    .y(function(d) { return d[1] / 100 })\r\n    .color( d3.scaleOrdinal(d3.schemeCategory10).range())\r\n    .useInteractiveGuideline(true)\r\n    ;\r\n\r\n\r\n\r\n\r\n  chart.xAxis\r\n    .tickFormat(function(d) {\r\n      return d3.timeParse(\"%c\")(new Date(d))\r\n    });\r\n\r\n  chart.yAxis.tickFormat(d3.format(',.1%'));\r\n\r\n  d3.select('#chart svg')\r\n    .datum(data)\r\n    .transition().duration(500)\r\n    .call(chart)\r\n    ;\r\n\r\n  nv.utils.windowResize(chart.update);\r\n\r\n  return chart;\r\n});\r\n\r\n}\r\n\r\nexport default TestProcess"]},"metadata":{},"sourceType":"module"}