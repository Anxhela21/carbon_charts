{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeDecorator = void 0;\n\nvar _utilDeprecate = _interopRequireDefault(require(\"util-deprecate\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar makeDecorator = function makeDecorator(_ref) {\n  var name = _ref.name,\n      parameterName = _ref.parameterName,\n      wrapper = _ref.wrapper,\n      _ref$skipIfNoParamete = _ref.skipIfNoParametersOrOptions,\n      skipIfNoParametersOrOptions = _ref$skipIfNoParamete === void 0 ? false : _ref$skipIfNoParamete,\n      _ref$allowDeprecatedU = _ref.allowDeprecatedUsage,\n      allowDeprecatedUsage = _ref$allowDeprecatedU === void 0 ? false : _ref$allowDeprecatedU;\n\n  var decorator = function decorator(options) {\n    return function (getStory, context) {\n      var parameters = context.parameters && context.parameters[parameterName];\n\n      if (parameters && parameters.disable) {\n        return getStory(context);\n      }\n\n      if (skipIfNoParametersOrOptions && !options && !parameters) {\n        return getStory(context);\n      }\n\n      return wrapper(getStory, context, {\n        options: options,\n        parameters: parameters\n      });\n    };\n  };\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // Used without options as .addDecorator(decorator)\n\n\n    if (typeof args[0] === 'function') {\n      return decorator().apply(void 0, args);\n    }\n\n    return function () {\n      for (var _len2 = arguments.length, innerArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        innerArgs[_key2] = arguments[_key2];\n      } // Used as [.]addDecorator(decorator(options))\n\n\n      if (innerArgs.length > 1) {\n        return decorator.apply(void 0, args).apply(void 0, innerArgs);\n      }\n\n      if (allowDeprecatedUsage) {\n        // Used to wrap a story directly .add('story', decorator(options)(() => <Story />))\n        //   This is now deprecated:\n        return (0, _utilDeprecate[\"default\"])(function (context) {\n          return decorator.apply(void 0, args)(innerArgs[0], context);\n        }, \"Passing stories directly into \".concat(name, \"() is deprecated,\\n          instead use addDecorator(\").concat(name, \") and pass options with the '\").concat(parameterName, \"' parameter\"));\n      }\n\n      throw new Error(\"Passing stories directly into \".concat(name, \"() is not allowed,\\n        instead use addDecorator(\").concat(name, \") and pass options with the '\").concat(parameterName, \"' parameter\"));\n    };\n  };\n};\n\nexports.makeDecorator = makeDecorator;","map":null,"metadata":{},"sourceType":"script"}