{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.is-array\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.number.constructor\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.isPriorToFiber = exports.isValidFiberElement = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _flattenDeep = _interopRequireDefault(require(\"lodash/flattenDeep\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n} // return true if the element is renderable with react fiber\n\n\nvar isValidFiberElement = function isValidFiberElement(element) {\n  return typeof element === 'string' || typeof element === 'number' || _react[\"default\"].isValidElement(element);\n};\n\nexports.isValidFiberElement = isValidFiberElement;\n\nvar isPriorToFiber = function isPriorToFiber(version) {\n  var _version$split = version.split('.'),\n      _version$split2 = _slicedToArray(_version$split, 1),\n      majorVersion = _version$split2[0];\n\n  return Number(majorVersion) < 16;\n}; // accepts an element and return true if renderable else return false\n\n\nexports.isPriorToFiber = isPriorToFiber;\n\nvar isReactRenderable = function isReactRenderable(element) {\n  // storybook is running with a version prior to fiber,\n  // run a simple check on the element\n  if (isPriorToFiber(_react[\"default\"].version)) {\n    return _react[\"default\"].isValidElement(element);\n  } // the element is not an array, check if its a fiber renderable element\n\n\n  if (!Array.isArray(element)) {\n    return isValidFiberElement(element);\n  } // the element is in fact a list of elements (array),\n  // loop on its elements to see if its ok to render them\n\n\n  var elementsList = element.map(isReactRenderable); // flatten the list of elements (possibly deep nested)\n\n  var flatList = (0, _flattenDeep[\"default\"])(elementsList); // keep only invalid elements\n\n  var invalidElements = flatList.filter(function (elementIsRenderable) {\n    return elementIsRenderable === false;\n  }); // it's ok to render this list if there is no invalid elements inside\n\n  return !invalidElements.length;\n};\n\nvar _default = isReactRenderable;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}